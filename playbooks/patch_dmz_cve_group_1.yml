---

- name: patch dmz group 1
  hosts:
  - 'patching_group_1'
  - 'patching_dmz'
  serial: 50

  vars_prompt:
  - name: "cve_number"
    prompt: "This playbook will terminate your local ControlPersist sessions near the end\nDO NOT USE THIS WHILE RUNNING OTHER PLAYBOOKS\nPlease enter the CVE you are patching as 'CVE-SOME-NUMBER'"
    private: false

  tasks:
  - name: patch ; verify httpd.conf
    register: confd_st
    stat: path=/etc/httpd/conf.d

  - name: patch ; verify ssl.conf
    register: ssl_conf_st
    stat: path=/etc/httpd/conf.d/ssl.conf

  - name: patch ; force metadata refresh
    command: 'yum clean all'
    
  - name: patch ; update affected packages
    command: 'yum update -y -q --cve {{ cve_number }}'

  - name: patch ; clear RHEL provided ssl.conf
    when: not ssl_conf_st.stat.exists and confd_st.stat.exists
    template:
      src: templates/ssl.conf.j2
      dest: /etc/httpd/conf.d/ssl.conf
      owner: root
      group: root
      mode: 0755
      seuser: system_u
      setype: httpd_config_t
      serole: object_r
      selevel: s0

- name: refresh httpd
  hosts:
  - 'patching_group_1'
  - 'patching_dmz'
  serial: 50
  roles:
  - apache

- name: postpatch
  serial: 50
  hosts:
  - 'patching_group_1'
  - 'patching_dmz'
  tasks:
  - name: postpatch ; prune old kernels
    command: package-cleanup --oldkernels -y

  - name: postpatch ; reboot
    shell: '(sleep 2 && shutdown -r now "Reboot triggered by Ansible") &'
    async: 1
    poll: 0
    ignore_errors: true

    # Poll here otherwise fact checking will fail
  - name: postpatch ; poll host ssh
    local_action: wait_for host={{ inventory_hostname }}
                  state=started
                  port=22
                  delay=10
                  timeout=600
    become: false
    become_method: sudo

- name: session cleanup
  gather_facts: no
  hosts: all
  tasks:
  - name: cleanup ; provide cancellation opportunity 
    pause: seconds=10 prompt="WARNING!!!!! About to initiate required teardown of local ControlPersist sessions!!!!!"

  - name: cleanup ; ssh mux sessions
    command: pkill -f '^ssh.*\[mux\]' 
    delegate_to: localhost
    become: false
    become_method: sudo
    run_once: true
    failed_when: false

- name: postreboot
  serial: 50
  tags: postreboot
  hosts:
  - 'patching_group_1'
  - 'patching_dmz'
  tasks:
  - name: postreboot ; refresh aide db as bg job
    shell: '(aide --init) &'

...
# vim:ft=ansible: