---

- name: Reset Password
  vars_prompt:
  - name: user_to_reset
    prompt: "Username to reset"
    private: false
  
  - name: mail_to
    prompt: "email address for notification"
    private: false

  hosts: all
  tasks:
  - name: reset; /usr/bin/passwd setuid permissions
    file:
      state: file
      owner: root
      group: root
      mode: "4755"
      path: /usr/bin/passwd

  - name: reset; password generate 
    register: pwgen_result
    become: false
    local_action: command /usr/bin/pwgen -B -1 -y -v -c -n 14 1
    failed_when: "pwgen_result.rc > 1"
    changed_when: "pwgen_result.rc != 0"

  - name: reset; password assign
    register: passwd_result
    shell: "echo '{{ pwgen_result.stdout|e }}' | passwd --stdin '{{ user_to_reset }}'"
    changed_when: false

  - name: reset; make temporary
    register: chage_result
    command: chage -d 0 {{ user_to_reset }}
    changed_when: false

  - name: ----------------------------NEXT STEPS!----------------------------
    debug:
      msg: "You have successfully set the password for {{ user_to_reset }}
            to the temporary value of: {{ pwgen_result.stdout|e }}
            Please send this temporary value via SMS (NOT EMAIL!!) to
            user(s) {{ user_list[user_to_reset].acct_owners|join(', ')}}"
    changed_when: true
    
  #  Commenting this out because it is not allowed to email any sort of password
  #- name: mail password information 
  #  become: false
  #  local_action: shell
  #                echo -e "The password has been reset on {{ inventory_hostname }}.\n\n
  #                User {{ user_to_reset }}\n
  #                Password {{ pwgen_result.stdout|e }}\n\n
  #                Please log in to assign a new password\n
  #                If there are any issues please update the ticket\n\n\n
  #                NOTE - password reset emails from the linux team will never contain links!" |
  #                mailx -S "from=Team <team@email.com>" 
  #                -s "Password Reset on {{ inventory_hostname }}" {{ item }}
  #  with_items: user_list[user_to_reset].acct_owners

...
# vim:ft=ansible: