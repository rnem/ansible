---
# file: roles/cis_rhel7/tasks/section05_level1.yml
#
# Copyright 2014 Major Hayden
#           2017 Roger Nem
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

  - name: "Access and Authentication | 5.1.1 Ensure cron daemon is enabled (Scored)"
    yum:
      name: cronie-anacron
      state: present
    tags:
      - scored
      - section5.1
      - section5.1.1

  - name: "Access and Authentication | 5.1.1 Ensure cron daemon is started (Scored)"
    systemd:
      name: crond
      enabled: yes
      state: started
    tags:
      - scored
      - section5.1
      - section5.1.1

  - name: "Access and Authentication | 5.1.2 Ensure permissions on crontab are configured (Scored)"
    file:
      path: "/etc/{{ item }}"
      owner: root
      group: root
      mode: 0600
    with_items:
      - crontab
      - anacrontab
    tags:
      - scored
      - section5.1
      - section5.1.2

  - name: "Access and Authentication | 5.1.3 - 5.1.6 Ensure permissions on /etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly and /etc/cron.monthly are configured (Scored)"
    file:
      path: "/etc/{{ item }}"
      owner: root
      group: root
      mode: 0600
    with_items:
      - cron.hourly
      - cron.daily
      - cron.weekly
      - cron.monthly
    tags:
      - scored
      - section5.1
      - section5.1.3
      - section5.1.4
      - section5.1.5
      - section5.1.6

  - name: "Access and Authentication | 5.1.7 Ensure permissions on /etc/cron.d are configured (Scored)"
    file:
      path: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
    tags:
      - scored
      - section5.1
      - section5.1.7

  - name: "Access and Authentication | 5.1.8 Ensure at/cron is restricted to authorized users (Scored)"
    file:
      path: "/etc/{{ item }}.deny"
      state: absent
    with_items:
      - at
      - cron
    tags:
      - scored
      - section5.1
      - section5.1.8

  - name: "Access and Authentication | 5.1.8 Ensure at/cron is restricted to authorized users (Scored)"
    file:
      path: /etc/{{ item }}.allow
      state: touch
      owner: root
      group: root
      mode: 0600
    with_items:
      - at
      - cron
    tags:
      - scored
      - section5.1
      - section5.1.8

  - name: "Access and Authentication | 5.2 SSH server configuration (Scored)"
    include_role:
      name: common
      tasks_from: ssh
    tags:
      - scored
      - section5.2
      - section5.2.1
      - section5.2.2
      - section5.2.3
      - section5.2.4
      - section5.2.5
      - section5.2.6
      - section5.2.7
      - section5.2.8
      - section5.2.9
      - section5.2.10
      - section5.2.11
      - section5.2.12
      - section5.2.13
      - section5.2.14
      - section5.2.15
      - section5.2.16

  - name: "Access and Authentication | 5.3 Configure PAM (Scored)"
    include_role:
      name: common
      tasks_from: pam
    tags:
      - scored
      - section5.3
      - section5.3.1
      - section5.3.2
      - section5.3.3
      - section5.3.4

  - name: "Access and Authentication | 5.4.1.1 Ensure password expiration is 90 days or less (Scored)"
    lineinfile:
      backup: yes
      state: present
      dest: /etc/login.defs
      backrefs: yes
      regexp: "^.*PASS_MAX_DAYS\\s+"
      line: "PASS_MAX_DAYS 90"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.1

  - name: "Access and Authentication | 5.4.1.2 Ensure minimum days between password changes is 7 or more (Scored)"
    lineinfile:
      backup: yes
      state: present
      dest: /etc/login.defs
      backrefs: yes
      regexp: "^.*PASS_MIN_DAYS\\s+"
      line: "PASS_MIN_DAYS 7"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.2

  - name: "Access and Authentication | 5.4.1.3 Ensure password expiration warning days is 7 or more (Scored)"
    lineinfile:
      backup: yes
      state: present
      dest: /etc/login.defs
      backrefs: yes
      regexp: "^.*PASS_WARN_AGE\\s+"
      line: "PASS_WARN_AGE 7"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.3

  - name: "Access and Authentication | 5.4.1.4 Ensure inactive password lock is 30 days or less (check value) (Scored)"
    shell: "useradd -D | grep INACTIVE"
    register: inactive_accounts
    check_mode: no
    changed_when: no
    when: lock_inactive
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.4

  - name: "Access and Authentication | 5.4.1.4 Ensure inactive password lock is 30 days or less (set value to 30) (Scored)"
    command: "useradd -D -f 30"
    when:
      - lock_inactive
      - "inactive_accounts.stdout != 'INACTIVE=30'"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.4

  - name: "Access and Authentication | 5.4.2 Ensure system accounts are non-login (check accounts) (Scored)"
    shell: awk -F':' '($3<500 && $1!="root" && $1!="sync" && $1!="shutdown" && $1!="halt" && $7!="/sbin/nologin") { print $1 }' /etc/passwd
    register: enabled_system_accounts
    check_mode: no
    changed_when: no
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: "Access and Authentication | 5.4.2 Ensure system accounts are non-login (set nologin) (Scored)"
    command: /usr/sbin/usermod -s /sbin/nologin {{ item }}
    with_items: enabled_system_accounts.stdout_lines
    when: "enabled_system_accounts.stdout_lines != []"
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: "Access and Authentication | 5.4.3 Ensure default group for the root account is GID 0 (Scored)"
    user:
      name: root
      group: root
    tags:
      - scored
      - section5.4
      - section5.4.3

  - name: "Access and Authentication | 5.4.4 Ensure default user umask is 027 or more restrictive (SPE policy is 077) (Scored)"
    template:
      src: cis.sh.j2
      dest: /etc/profile.d/cis.sh
      owner: root
      group: root
      mode: 0644
    tags:
      - scored
      - section5.4
      - section5.4.4

  - name: "Access and Authentication | 5.5 Restrict root login to system console (Not Scored)"
    debug:
      msg: "*** Probably too restrictive and not wanted."
    tags:
      - notscored
      - section5.5

  - name: "Access and Authentication | 5.6 Ensure access to the su command is restricted (Scored)"
    lineinfile:
      state: present
      dest: /etc/pam.d/su
      backrefs: yes
      regexp: "^#(auth.*required.*pam_wheel.so.*)$"
      line: "\\1"
    tags:
      - scored
      - section5.6

...
# vim:ft=ansible: