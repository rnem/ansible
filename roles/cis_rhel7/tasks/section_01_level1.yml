---
# file: roles/cis_rhel7/tasks/section_01_level1.yml
#
# Copyright 2014 Major Hayden
#           2017 Roger Nem
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

  - name: "Initial Setup | 1.1.1.1 - 1.1.1.8 Ensure mounting of various filesystems is disabled (Scored)"
    template:
      src: modprobe.CIS.conf.j2
      dest: /etc/modprobe.d/CIS.conf
      owner: root
      group: root
      mode: 0600
    tags:
      - scored
      - section1.1
      - section1.1.1
      - section1.1.1.1
      - section1.1.1.2
      - section1.1.1.3
      - section1.1.1.4
      - section1.1.1.5
      - section1.1.1.6
      - section1.1.1.7
      - section1.1.1.8

  - name: "Initial Setup | 1.1.3 - 1.1.5 Ensure nodev,nosuid,noexec option set on /tmp Partition (Scored)"
    mount:
      name: "/tmp"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev,nosuid,noexec"
    when: item.mount == "/tmp"
    with_items:
      - "{{ ansible_mounts }}"
    tags:
      - scored
      - section1.1
      - section1.1.3
      - section1.1.4
      - section1.1.5

  - name: "Initial Setup | 1.1.8 - 1.1.10 Ensure nodev,nosuid,noexec option set on /var/tmp partition (Scored)"
    mount:
      name: "/var/tmp"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev,nosuid,noexec"
    when: item.mount == "/var/tmp"
    with_items:
      - "{{ ansible_mounts }}"
    tags:
      - scored
      - section1.1
      - section1.1.8
      - section1.1.9
      - section1.1.10

  - name: "Initial Setup | 1.1.14 Add nodev Option to /home Partition (Scored)"
    mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
    when: item.mount == "/home"
    with_items:
      - "{{ ansible_mounts }}"
    tags:
      - scored
      - section1.1
      - section1.1.14

  - name: "Initial Setup | 1.1.15 - 1.1.17 Add nodev,nosuid,noexec Option to /dev/shm Partition (Scored)"
    mount:
      name: "/dev/shm"
      src: "none"
      state: mounted
      fstype: "tmpfs"
      opts: "nodev,nosuid,noexec"
    tags:
      - scored
      - section1.1
      - section1.1.15
      - section1.1.16
      - section1.1.17

  - name: "Initial Setup | 1.1.18 - 1.1.20 Ensure nodev,nosuid,noexec set on removable media partitions (Not Scored)"
    debug:
      msg: "*** Not relevant."
    tags:
      - notscored
      - section1.1
      - section1.1.18
      - section1.1.19
      - section1.1.20

  - name: "Initial Setup | 1.1.21 Set sticky bit on all world-writable directories (Scored)"
    debug:
      msg: "*** Dangerous post-install. Not enforcing."
    tags:
      - scored
      - section1.1
      - section1.1.21

  - name: "Initial Setup | 1.1.22 Disable automounting (Scored)"
    systemd:
      name: autofs.service
      state: stopped
      enabled: no
      masked: yes
    tags:
      - scored
      - section1.1
      - section1.1.22

  - name: "Initial Setup | 1.2.1 Ensure package manager repositories are configured (Not Scored)"
    command: yum check-update
    register: yum_update
    failed_when: "yum_update.rc == 1"
    tags:
      - notscored
      - section1.2
      - section1.2.1

  - name: "Initial Setup | 1.2.2 Ensure gpgcheck is globally activated (Scored)"
    lineinfile:
      state: present
      dest: /etc/yum.conf
      regexp: "^.*gpgcheck="
      line: "gpgcheck=1"
    tags:
      - scored
      - section1.2
      - section1.2.2

  - name: "Initial Setup | 1.2.3 Ensure GPG keys are configured (Not Scored)"
    shell: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
    changed_when: no
    check_mode: no
    tags:
      - notscored
      - section1.2
      - section1.2.3

  - name: "Initial Setup | 1.2.4 Ensure Red Hat Network or Subscription Manager connection is configured (Not Scored)"
    debug:
      msg: "*** Not applicable with the SPE environment, we use Red Hat Satellite."
    tags:
      - notscored
      - section1.2
      - section1.2.4

  - name: "Initial Setup | 1.3.1 Ensure AIDE is installed (install package) (Scored)"
    yum:
      name: aide
      state: present
    when: configure_aide
    tags:
      - scored
      - section1.3
      - section1.3.1

  - name: "Initial Setup | 1.3.1 Ensure AIDE is installed (initialize database) (Scored)"
    command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
    args:
      creates: /var/lib/aide/aide.db.gz
    when: configure_aide
    ignore_errors: "{{ continue_after_error }}"
    tags:
      - scored
      - section1.3
      - section1.3.1

  - name: "Initial Setup | 1.3.1 Ensure AIDE is installed (find prelink) (Scored)"
    command: which prelink
    register: prelink
    changed_when: no
    failed_when: no
    check_mode: no
    when: configure_aide
    ignore_errors: yes
    tags:
      - scored
      - section1.5
      - section1.5.4

  - name: "Initial Setup | 1.3.1 Ensure AIDE is installed (disable prelinking) (Scored)"
    lineinfile:
      state: present
      dest: /etc/sysconfig/prelink
      regexp: "^.*PRELINKING="
      line: "PRELINKING=no"
      create: yes
    when:
      - configure_aide
      - "prelink.rc == 0"
    ignore_errors: "{{ continue_after_error }}"
    tags:
      - scored
      - section1.3
      - section1.3.1

  - name: "Initial Setup | 1.3.2 Ensure filesystem integrity is regularly checked (Scored)"
    cron:
      name: "Ensure filesystem integrity is regularly checked (CIS 1.3.2)"
      minute: "0"
      hour: "5"
      job: "/usr/sbin/aide --check"
    when: configure_aide
    tags:
      - scored
      - section1.3
      - section1.3.2

  - name: "Initial Setup | 1.4.1 Configure bootloader configuration file permissions (verify if system is using EFI) (Scored)"
    stat:
      path: "/etc/grub2-efi.cfg"
    register: is_efi
    tags:
      - scored
      - section1.4
      - section1.4.1

  - name: "Initial Setup | 1.4.1 Configure bootloader configuration file permissions (set path to grub configuration link) (Scored)"
    set_fact:
      grubcfg: "{% if is_efi.stat.exists %}/etc/grub2-efi.cfg{% else %}/etc/grub2.cfg{% endif %}"
    tags:
      - scored
      - section1.4
      - section1.4.1

  - name: "Initial Setup | 1.4.1 Configure bootloader configuration file permissions (get absolute path to grub configuration file) (Scored)"
    command: "readlink -f {{ grubcfg }}"
    register: readlink
    changed_when: no
    check_mode: no
    tags:
      - scored
      - section1.4
      - section1.4.1

  - name: "Initial Setup | 1.4.1 Configure bootloader configuration file permissions (set User/Group Owner on grub.conf) (Scored)"
    file:
      path: "{{ readlink.stdout }}"
      owner: root
      group: root
      mode: 0600
    tags:
      - scored
      - section1.4
      - section1.4.1

  - name: "Initial Setup | 1.4.2 Set boot loader password (Scored)"
    debug:
      msg: "*** Problematic for production systems. Not implementing per SPE policy."
    tags:
      - scored
      - section1.4
      - section1.4.2

  - name: "Initial Setup | 1.4.3 Require authentication for single-user mode (Scored)"
    lineinfile:
      dest: /etc/sysconfig/init
      regexp: "^.*SINGLE="
      line: "SINGLE=/sbin/sulogin"
    tags:
      - scored
      - section1.4
      - section1.4.3

#  - name: "Initial Setup | 1.4.4 Ensure interactive boot is not enabled (Scored)"
#    lineinfile:
#      dest: /etc/sysconfig/init
#      regexp: "^.*PROMPT="
#      line: "PROMPT=no"
#    tags:
#      - scored
#      - section1.4
#      - section1.4.4

  - name: "Initial Setup | 1.5.1 Restrict core dumps (Scored)"
    sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
      ignoreerrors: "{{ ignore_sysctl_errors }}"
    tags:
      - scored
      - section1.5
      - section1.5.1

  - name: "Initial Setup | 1.5.2 Ensure XD/NX support is enabled (Not Scored)"
    shell: "dmesg | grep NX"
    check_mode: no
    changed_when: no
    ignore_errors: yes
    # even if not available, don't do anything
    tags:
      - scored
      - section1.5
      - section1.5.2

  - name: "Initial Setup | 1.5.3 Ensure address space layout randomization (ASLR) is enabled (Scored)"
    sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
      ignoreerrors: "{{ ignore_sysctl_errors }}"
    tags:
      - scored
      - section1.5
      - section1.5.3

  - name: "Initial Setup | 1.5.4 Ensure prelink is disabled (restore binaries) (Scored)"
    command: "{{ prelink.stdout }} -ua"
    when: "prelink.rc == 0"
    tags:
      - scored
      - section1.5
      - section1.5.4

  - name: "Initial Setup | 1.5.4 Ensure prelink is disabled (remove package) (Scored)"
    yum:
      name: prelink
      state: absent
    tags:
      - scored
      - section1.5
      - section1.5.4

  - name: "Initial Setup | 1.7.1.1 - 1.7.1.6 Ensure all banners are configured properly (Scored)"
    include_role:
      name: common
      tasks_from: warning_banners
    tags:
      - scored
      - section1.7
      - section1.7.1
      - section1.7.1.1
      - section1.7.1.2
      - section1.7.1.3
      - section1.7.1.4
      - section1.7.1.5
      - section1.7.1.6

  - name: "Initial Setup | 1.7.2 Ensure GDM login banner is configured (remove gdm package) (Scored)"
    yum:
      name: gdm
      state: absent
    tags:
      - scored
      - section1.7
      - section1.7.2

  - name: "Initial Setup | 1.8 Ensure updates, patches and additional security software are installed (Not Scored)"
    debug:
      msg: "*** Patches applied monthly through Red Hat Satellite."
    tags:
      - notscored
      - section1.8

...
# vim:ft=ansible: